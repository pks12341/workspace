<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.app.emp.mapper.EmpMapper">
	<!-- 전체조회 -->
	<select id="selectEmpList" resultType="EmpVO">
		SELECT employee_id,
		last_name, email, hire_date, job_id, salary
		FROM employees
		ORDER BY
		employee_id
	</select>

	<!-- 단건조회 -->
	<select id="selectEmpInfo" resultType="EmpVO">
		SELECT employee_id, last_name, email, hire_date, job_id, salary
		FROM
		employees
		WHERE employee_id = #{employeeId}
		<!-- *주의 : 대부분 $로 쓰는데 mybatis만 #으로 쓴다 작은따옴표 붙나 안붙나 차이? $는 동적 검색조건을 줄떄..default는 
			# -->
		<!-- column LIKE '%'||#{field}||'%' column LIKE '%${field}%' -->
	</select>

	<!-- 등록 -->
	<insert id="insertEmpInfo" parameterType="EmpVO">
		<selectKey keyProperty="employeeId"  
			resultType="int"
			order = "BEFORE">
			
			SELECT NVL(MAX(employee_id),0) + 1
			FROM employees

		</selectKey>
		INSERT INTO employees
		(
		employee_id,
		last_name, email,
		hire_date,
		job_id,
		salary
		)

		VALUES
		(
		#{employeeId},
		#{lastName},
		#{email},
		#{hireDate},
		#{jobId},
		#{salary}
		)




	</insert>

	<!-- 수정 -->
	<update id="updateEmpInfo" parameterType="EmpVO">
		<!-- 어떤게 수정되었는지 모르는형태 ..전제조건 : 수정여부와 상관없이 전체데이터가 넘어온다 -->
		UPDATE employees
		SET
		last_name = #{lastName},
		email = #{email},
		salary = #{salary}
		WHERE employee_id = #{employeeId}

	</update>
	<!-- 수정 : 변경된 데이터만 전송 -->
	<update id="updateEmpInfoDynamic" parameterType="EmpVO">
		UPDATE employees
		SET
		<choose>
			<when test="lastName != null and !lastName.equals('')"> <!-- null이 아니고 공백도 아니어야함 -->
				last_name = #{lastName}
			</when>
			<otherwise>
				last_name = 'Any'
			</otherwise>
		</choose>
		<if test="email != null">
			, email = #{email}
		</if>
		<if test="salary >= 0"><!-- salary는 double 즉 기본타입이다. 기본타입은 null을 가질수없다 -->
			, salary = #{salary}<!-- ,위치 잘 생각하기 -->
		</if>
		<where>
			<if test="employeeId > 0"><!-- 하위 조건식의 만족 여부에 따라서 where절 자체가 없을수도 있다 -->
				employee_id = #{employeeId}
			</if>
		</where>
	</update>
	
	<!-- 매개변수 두개일경우 -->
	<update id ="updateEmpSal"><!-- type생략 -->
		UPDATE employees
			SET salary = salary * #{info.salary}<!-- EmpMapper.java에서 param을 기반으로 정해진이름-->
		WHERE employee_id = #{eid}
	</update>
	
	<!-- 삭제 -->
	<delete id="deleteEmpInfo" parameterType="int">
		DELETE FROM employees
		WHERE employee_Id = #{eid}<!-- 매개변수가 하나면 이름이 뭐든지 상관X -->

	</delete>

</mapper>